#!/bin/bash

set -h

getopt -o dt: --long nodunst,test -n 'parse-options' -- "$@"
[ $? -ne 0 ] && { echo "Failed parsing options." >&2 ; exit 1; }

kill_dunst=1
test=0

while true; do
  case "$1" in
    -d | --nodunst ) kill_dunst=0; shift ;;
    -t | --test ) test=1; kill_dunst=0; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

echo "Kill dunst? $kill_dunst"
echo "Test?       $test"


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR" || exit 1
TMP_IMAGE=/tmp/i3_lock.png

IMAGE="$(realpath $HOME/.wallpaper)"
IMAGE2="$(realpath $HOME/.wallpaper2)"
WALLPAPER_PATH="/tmp/lockscreen_$(basename "${IMAGE}")__$(basename "${IMAGE2}").png"

tmpfile=$(mktemp)
cp "$WALLPAPER_PATH" $tmpfile 2>/dev/null

function finish {
  rm -f "$tmpfile"

  #pkill -e -f create-lockscreen-image
    if [ $kill_dunst -eq 1 ]; then
        pkill -u "$USER" -USR2 dunst
        pkill -cont polybar
        pkill -cont rambox
        pkill -cont java
    fi
}

trap finish EXIT


rm "$TMP_IMAGE"

if [ $kill_dunst -eq 1 ]; then
    pkill -u "$USER" -USR1 dunst
    pkill -stop polybar
    pkill -stop rambox
    pkill -stop java
fi


mpc --format '' | grep -q '\[playing\]'
mpd_is_playing=$?
mpc pause

if [ $test -eq 1 ]; then
	bash ./create-lockscreen-image && exo-open "$TMP_IMAGE"
else

	bash ./create-lockscreen-image && pkill -e -f i3lock && i3lock -n -i "$TMP_IMAGE" &
	if [ -f "$WALLPAPER_PATH" ]; then
		i3lock -n -i "$WALLPAPER_PATH"
	else
		i3lock -c 000000
	fi
fi




if [ $mpd_is_playing -eq 0 ]; then
    mpc play
fi
