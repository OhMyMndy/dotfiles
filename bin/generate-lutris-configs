#!/usr/bin/env bash


if [ $UID -eq 0 ]; then
	echo "Run this script as non root user please..."
	exit 99
fi

trap "exit" INT


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# shellcheck source=../.functions
source "$DIR/../.functions"

rom_file="$1"
# rom_filename="$(basename "$rom_file")"


# if [[ ! -f $rom_file ]]; then
#     zenity --error --text "Rom file does not exists at '$rom_file'" --no-wrap
#     exit 3
# fi

# system="$2"
# if [[ $system = '' ]]; then
#     set -e
#     system="$(zenity --text "Install rom to Lutris '$rom_filename'" --forms \
#         --add-list="Platform" \
#         --list-values="psx|ps2|gamecube|gb|gba|gbc")"
#     set +e
# fi


# game_name="$3"
# if [[ $game_name = '' ]]; then
#     set -e
#     game_name="$(zenity --text "Install rom to Lutris '$rom_filename'" --forms \
#         --add-entry="Game name")"
#     set +e
# fi

function detect_system() {
    case $rom_file in
        *Sony-Playstation-EUR*) system=psx;;
        *Sony-Playstation-USA*) system=psx;;
    esac
}

detect_system

if [[ -z $system ]]; then
    echo "No system detected!"
    exit 2
fi

echo $rom_file
echo $system


function slug() {
    echo "$1" | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z
}
function render_psx() {
    local ROM="$1"
    local core="$2"
    local DIR="$(dirname "$ROM")"
    local slug="$(slug "$rom_file")"

cat > "$tmp_file" <<EOL
name: a2 racer
slug: a2-racer
runner: libretro
version: Installer
game_slug: a2-racer-installer


script:
  game:
    core: $core
    main_file: \$GAMEDIR
  system:
    disable_runtime: false
    prefer_system_libs: false

    files:
      - gamearchive: 
          url: $ROM
          filename: rom.zip
    installer:
        - extract:
            dst: \$CACHE/a2-racer
            file: gamearchive
            format: zip
        - execute:
            # Move ALL the files from SEEK subdirectory into destination
            command: rmdir "\$GAMEDIR" && mv "\$CACHE/a2-racer/*" "$GAMEDIR" && rm -rf "\$CACHE/a2-racer"
    
  
EOL
    cat "$tmp_file"
    lutris -d -i "$tmp_file"
}



# if [[ $system = 'psx' ]] && [[ -d $rom_file ]]; then
#     find "$rom_file" -name '*.iso' -or -name '*.cue' -print0 | while read -r -d $'\0' file
#     do
#         render_psx "$file"
#     done
# el
if [[ $system = 'psx' ]]; then
    tmp_file="$(mktemp)"
    render_psx "$rom_file" "mednafen_psx_hw"
fi
