#!/usr/bin/env bash


if ! command -v docker-compose &>/dev/null; then
  >&2 echo "No docker-compose found!"
  exit 1
fi

docker_compose_commands=("$(docker-compose commands 2>&1 | grep -Eo '^\s*[a-z]*' | tr '\n' ' ')")

command=''
for arg do
  shift

  # if we have a command, set it
  if [[ " ${docker_compose_commands[*]} " =~  ${arg} ]] && [[ "$command" = '' ]]; then
    command="${arg}"
    set -- "$@" "$arg"
    continue
  fi

  # Do not do anything when we have a command, -f can be used multiple times (`logs --tail -f` for example)
  if [[ "$command" != '' ]]; then
    set -- "$@" "$arg"
    continue
  fi

  if [[ "$file" == "-f" ]]; then
    file="$arg"
  fi
  if [[ "$arg" = "-f" ]] || [[ "$arg" = "--file" ]]; then
    shift
    file="-f"
    continue
  fi
  set -- "$@" "$arg"
done

if [[ -n $file ]]; then
    cd "$(dirname "$file")" || exit 99;
fi

tmpfile="$(mktemp -p "$PWD")"
finish() {
    rm -f "$tmpfile"
}
trap finish 0 1 2 3 6 14 15

if [[ -z $file ]]; then
  file=docker-compose.yml
fi

if [[ -f "${file//.yml/}.py" ]]; then
    # shellcheck disable=2046
    env $(grep -v '^#' .env | xargs) python3 "${file//.yml}.py" > "$tmpfile"
    docker-compose -f "$tmpfile" "$@"
    exit $?
elif [[ -f "${file}.sh" ]]; then
    # shellcheck disable=2046
    env $(grep -v '^#' .env | xargs) bash "${file}.sh" > "$tmpfile"
    docker-compose -f "$tmpfile" "$@"
    exit $?
fi

docker-compose "$@"
exit $?