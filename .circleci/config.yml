---
version: 2
jobs:
  build:
    # machine: true
    docker:
      # - image: circleci/golang:1.12.12-buster
      - image: mandy91/dotfiles-build:0.1.1
    steps:
      - checkout
      - setup_remote_docker #:
          # docker_layer_caching: true # not available on my plan
      
      - run:
          name: Set up docker
          command: |
            # @see https://stackoverflow.com/questions/45796661/docker-permission-denied-while-trying-to-connect-to-docker-daemon-with-local-ci/45796662#45796662
            if [[ $CIRCLE_SHELL_ENV == *"localbuild"* ]]; then
              echo "export s=sudo" >> $BASH_ENV
              echo "export docker='sudo docker'" >> $BASH_ENV
            else
              echo "export s=" >> $BASH_ENV
              echo "export docker='docker'" >> $BASH_ENV
            fi

      - run:
          name: Test in docker container
          command: |
            $docker run --rm alpine:latest echo hi
      - run:
          name: Verify docker
          command: $docker --version

      - run:
          name: Shellcheck
          when: always
          command: |
            set +e

            exit 0

            failed=0
            # git ls-files | xargs -r -i bash -c "file \"{}\" | grep -iq Bourne-Again && echo \"{}\"" | xargs -r -i shellcheck -e SC1071,SC1008 -Calways -x "{}" -P "$(dirname "{}}")" | less
            #
            while read -r file; dos
              if ! shellcheck -x "$file" -P "$(dirname "$file")"; then
                failed=1
              fi
            done <<<$(git ls-files | xargs -r -i bash -c "file \"{}\" | grep -iq Bourne-Again && echo \"{}\"")
            exit $failed


      - run:
          name: Hadolint
          when: always
          command: |
            set +e
            failed=0
            while read -r file; do
              if ! hadolint "$file"; then
                failed=1
              fi
            done <<<$(git ls-files -- 'Dockerfile')
            exit $failed
      - run:
          name: Validate Yaml files
          when: always
          command: |
            set +e
            failed=0

            while read -r file; do
              if ! yamllint -s -d "line-length: {max: 80, allow-non-breakable-words: true}" "$file"; then
                failed=1
              fi
            done <<<$(git ls-files -- '*.yaml' '*.yml')
            exit $failed

      - run:
          name: Run tests
          when: always
          command: |
            set +e
            failed=0

            while read -r file; do
              if ! bats "$file"; then
                failed=1
              fi
            done <<<$(git ls-files -- '*.bats')
            exit $failed

      - run:
          name: Validate Desktop files
          when: always
          command: |
            set +e
            failed=0
            # @see https://specifications.freedesktop.org/menu-spec/latest/apa.html
            while read -r file; do
              if ! desktop-file-validate "$file"; then
                failed=1
              fi
            done <<<$(git ls-files -- '*.desktop')
            exit $failed

      - run:
          name: Markdownlint
          when: always
          command: |
            set +e
            failed=0
            while read -r file; do
              if ! markdownlint "$file"; then
                failed=1
              fi
            done <<<$(git ls-files -- '*.md')
            exit $failed

      - run:
          name: Vint
          when: always
          command: |
            set +e
            failed=0
            while read -r file; do
              if ! vint "$file"; then
                failed=1
              fi
            done <<<$(git ls-files -- '.vimrc' '*.vim')
            exit $failed